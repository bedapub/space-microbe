#### load libraries
ml purge
ml SAMtools
ml .testing
ml spaceranger/1.3.0
ml Anaconda3/2022.10

mkdir -p $OUTDIR/${NAME}/

#### converting possorted_genome_bam.bam file to original R1 and R2 fastq files

samtools view \
        -O BAM \
        -b \
        -f 4 \
        -@ $THREADS \
        ${BAM} > \
        $OUTDIR/${NAME}/${NAME}_unm.bam

samtools sort \
        -O BAM \
        -n \
        -@ $THREADS \
        $OUTDIR/${NAME}/${NAME}_unm.bam > \
        $OUTDIR/${NAME}/${NAME}_unm_srt.bam

rm $OUTDIR/${NAME}/${NAME}_unm.bam

spaceranger bamtofastq \
	--nthreads=$THREADS \
	$OUTDIR/${NAME}/${NAME}_unm_srt.bam \
	$OUTDIR/${NAME}/fastq

rm $OUTDIR/${NAME}/${NAME}_unm_srt.bam	

# concatenating multiple fastq files into one R1 and one R2

for name in $OUTDIR/${NAME}/fastq/*/*R1*.fastq.gz; do [ -f "$name" ] && cat <"$name"; done > $OUTDIR/${NAME}/R1.fastq.gz
for name in $OUTDIR/${NAME}/fastq/*/*R2*.fastq.gz; do [ -f "$name" ] && cat <"$name"; done > $OUTDIR/${NAME}/R2.fastq.gz

#find $OUTDIR/${NAME}/fastq -name "*R1*.fastq.gz" -print0 | xargs -0 -I file cat file > $OUTDIR/${NAME}/R1.fastq.gz
#find $OUTDIR/${NAME}/fastq -name "*R2*.fastq.gz" -print0 | xargs -0 -I file cat file > $OUTDIR/${NAME}/R2.fastq.gz

rm -r $OUTDIR/${NAME}/fastq/

#### extracting BC & UMI from R1 to R2 with umi_tools

conda activate /projects/site/pred/microbiome/microbiome-toolbox/apps/envs/umi_tools

umi_tools extract \
--bc-pattern=CCCCCCCCCCCCCCCCNNNNNNNNNNNN \
--stdin $OUTDIR/${NAME}/R1.fastq.gz \
--stdout $OUTDIR/${NAME}/${NAME}_R1_extracted.fastq.gz \
--read2-in $OUTDIR/${NAME}/R2.fastq.gz \
--read2-out=$OUTDIR/${NAME}/${NAME}_R2_extracted.fastq.gz

conda deactivate

rm $OUTDIR/${NAME}/${NAME}_R1_extracted.fastq.gz
rm $OUTDIR/${NAME}/R1.fastq.gz
rm $OUTDIR/${NAME}/R2.fastq.gz

#### Quality controol

#cutadapt
# -a trims adapters from 3'end
# -g trims adapters from 5'end

ml cutadapt/3.4-GCCcore-9.3.0-Anaconda3-2021.05
cutadapt -g "AAGCAGTGGTATCAACGCAGAGTACATGGG" -g "^A{30}" -n 2 -m 31 -o $OUTDIR/${NAME}/${NAME}_trimTSO.fq.gz --cores 6 $OUTDIR/${NAME}/${NAME}_R2_extracted.fastq.gz

#fastp

# minimum read length = 31 (kraken kmer length)
singularity exec --home /projects /projects/site/pred/microbiome/microbiome-toolbox/apps/containers/fastp/latest \
  fastp \
  -i $OUTDIR/${NAME}/${NAME}_trimTSO.fq.gz \
  -o $OUTDIR/${NAME}/${NAME}_trim.fq.gz \
  --cut_right_window_size 4 \
  --cut_right_mean_quality 20 \
  -A \
  -l 31 \
  --dont_eval_duplication \
  --trim_poly_x \
  -w 6 \
  --html $OUTDIR/${NAME}/${NAME}_fastp.html \
  --json $OUTDIR/${NAME}/${NAME}_fastp.html

rm $OUTDIR/${NAME}/${NAME}_trimTSO.fq.gz  
rm $OUTDIR/${NAME}/${NAME}_R2_extracted.fastq.gz

#### Kraken2 Bracken


#### Profiling with Kraken2 Bracken

#       Define DB path 
K2DB=/projects/site/pred/microbiome/database/kraken2_Standard_PlusPF/


if [ ! -d "$K2DB" ]; then
    echo "$K2DB DB does not exist"
    exit 1
fi


# Step 1: Classify reads with kraken2 (with KrakenUniq option)

mkdir -p $OUTDIR/${NAME}/k2b_outputs
mkdir -p $OUTDIR/${NAME}/k2b_outputs/01_kraken

singularity exec --home /projects /projects/site/pred/microbiome/microbiome-toolbox/apps/containers/kraken2/latest \
  kraken2 --db $K2DB \
  --memory-mapping \
  --confidence 0.1 \
  --threads 24 \
  --use-names \
  --gzip-compressed \
  --report-minimizer-data \
  --output $OUTDIR/${NAME}/k2b_outputs/01_kraken/${NAME}_output.txt \
  --report $OUTDIR/${NAME}/k2b_outputs/01_kraken/${NAME}_report.txt \
  $OUTDIR/${NAME}/${NAME}_trim.fq.gz


# Step 2: Abundance estimation with braken (species ONLY)

mkdir $OUTDIR/${NAME}/k2b_outputs/02_braken
mkdir $OUTDIR/${NAME}/k2b_outputs/02_braken/species
mkdir $OUTDIR/${NAME}/k2b_outputs/02_braken/genus
mkdir $OUTDIR/${NAME}/k2b_outputs/02_braken/family

singularity exec --home /projects /projects/site/pred/microbiome/microbiome-toolbox/apps/containers/bracken/latest \
  bracken -d $K2DB \
  -i $OUTDIR/${NAME}/k2b_outputs/01_kraken/${NAME}_report.txt \
  -r 50 \
  -t 3 \
  -l S \
  -w $OUTDIR/${NAME}/k2b_outputs/02_braken/species/${NAME}_report_species.txt \
  -o $OUTDIR/${NAME}/k2b_outputs/02_braken/species/${NAME}_output_species.txt

singularity exec --home /projects /projects/site/pred/microbiome/microbiome-toolbox/apps/containers/bracken/latest \
  bracken -d $K2DB \
  -i $OUTDIR/${NAME}/k2b_outputs/01_kraken/${NAME}_report.txt \
  -r 50 \
  -t 3 \
  -l G \
  -w $OUTDIR/${NAME}/k2b_outputs/02_braken/genus/${NAME}_report_genus.txt \
  -o $OUTDIR/${NAME}/k2b_outputs/02_braken/genus/${NAME}_output_genus.txt

singularity exec --home /projects /projects/site/pred/microbiome/microbiome-toolbox/apps/containers/bracken/latest \
  bracken -d $K2DB \
  -i $OUTDIR/${NAME}/k2b_outputs/01_kraken/${NAME}_report.txt \
  -r 50 \
  -t 3 \
  -l F \
  -w $OUTDIR/${NAME}/k2b_outputs/02_braken/family/${NAME}_report_family.txt \
  -o $OUTDIR/${NAME}/k2b_outputs/02_braken/family/${NAME}_output_family.txt

# Step 3: Generating combined abundance tables in mpa format

K2TOOLS=/projects/site/pred/microbiome/microbiome-toolbox/apps/misc_scripts/KrakenTools/
if [ ! -d "$K2TOOLS"]; then
    echo "$K2TOOLS does not exist"
    exit 1
fi

mkdir $OUTDIR/${NAME}/k2b_outputs/03_mpa
mkdir $OUTDIR/${NAME}/k2b_outputs/03_mpa/species
mkdir $OUTDIR/${NAME}/k2b_outputs/03_mpa/genus
mkdir $OUTDIR/${NAME}/k2b_outputs/03_mpa/family

## species
python $K2TOOLS/kreport2mpa.py \
 -r $OUTDIR/${NAME}/k2b_outputs/02_braken/species/${NAME}_report_species.txt \
 -o $OUTDIR/${NAME}/k2b_outputs/03_mpa/species/${NAME}_species_mpa.txt \
 --display-header 

## genus
python $K2TOOLS/kreport2mpa.py \
 -r $OUTDIR/${NAME}/k2b_outputs/02_braken/genus/${NAME}_report_genus.txt \
 -o $OUTDIR/${NAME}/k2b_outputs/03_mpa/genus/${NAME}_genus_mpa.txt \
 --display-header 

## family
python $K2TOOLS/kreport2mpa.py \
 -r $OUTDIR/${NAME}/k2b_outputs/02_braken/family/${NAME}_report_family.txt \
 -o $OUTDIR/${NAME}/k2b_outputs/03_mpa/family/${NAME}_family_mpa.txt \
 --display-header 

# Step 4: Generating combined Kraken2 count tables in mpa format

mkdir $OUTDIR/${NAME}/k2b_outputs/04_mpa_percentages

python $K2TOOLS/kreport2mpa.py \
 -r $OUTDIR/${NAME}/k2b_outputs/01_kraken/${NAME}_report.txt \
 -o $OUTDIR/${NAME}/k2b_outputs/04_mpa_counts/${NAME}_mpa.txt \
 --display-header \
 --percentages


# Step 5: modifying kraken output as input for Seurat

# extract only classified reads & remve all human reads
sed -e '/^U/d' -e '/sapiens/d' $OUTDIR/${NAME}/k2b_outputs/01_kraken/${NAME}_output.txt > $OUTDIR/${NAME}/${NAME}_filtered_output.txt
# extract spatial BC & UMIs into separate tabs
sed -i 's/\_/\t/g' $OUTDIR/${NAME}/${NAME}_filtered_output.txt
# extract taxid into separate tab
sed -i -e 's/ (taxid /\t/g' -e 's/)//g' $OUTDIR/${NAME}/${NAME}_filtered_output.txt
# extract only CB, UMI, taxid columns
awk -F "\t" '{ print $3,"\t",$4,"\t",$6 }' $OUTDIR/${NAME}/${NAME}_filtered_output.txt > $OUTDIR/${NAME}/${NAME}_kraken_output.txt

rm $OUTDIR/${NAME}/${NAME}_filtered_output.txt

#running R script

